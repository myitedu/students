<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
<pre>
    Here's a table comparing common array functions in both JavaScript and Python, along with sample code for each.

| Operation          | JavaScript                                  | Python                                      | Example in JavaScript                                                                                                                                              | Example in Python                                                                                                       |
|------------------------|-------------------------------------------------|-------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------|
| Create an array *    | let arr = [1, 2, 3];                         | arr = [1, 2, 3]                              | let arr = [1, 2, 3];                                                                                                                                                 | arr = [1, 2, 3]                                                                                                          |
| Append an item  *    | arr.push(4);                                 | arr.append(4)                                | let arr = [1, 2, 3]; arr.push(4); console.log(arr); // [1, 2, 3, 4]                                                                                                 | arr = [1, 2, 3]; arr.append(4); print(arr) # [1, 2, 3, 4]                                                                |
| Prepend an item  *   | arr.unshift(0);                              | arr.insert(0, 0)                             | let arr = [1, 2, 3]; arr.unshift(0); console.log(arr); // [0, 1, 2, 3]                                                                                               | arr = [1, 2, 3]; arr.insert(0, 0); print(arr) # [0, 1, 2, 3]                                                             |
| Remove last item *   | arr.pop();                                   | arr.pop()                                    | let arr = [1, 2, 3]; arr.pop(); console.log(arr); // [1, 2]                                                                                                          | arr = [1, 2, 3]; arr.pop(); print(arr) # [1, 2]                                                                          |
| Remove first item *   | arr.shift();                                 | arr.pop(0)                                   | let arr = [1, 2, 3]; arr.shift(); console.log(arr); // [2, 3]                                                                                                        | arr = [1, 2, 3]; arr.pop(0); print(arr) # [2, 3]                                                                         |
| Access by index *    | arr[1]                                       | arr[1]                                       | let arr = [1, 2, 3]; console.log(arr[1]); // 2                                                                                                                       | arr = [1, 2, 3]; print(arr[1]) # 2                                                                                       |
| Length of array  *   | arr.length                                   | len(arr)                                     | let arr = [1, 2, 3]; console.log(arr.length); // 3                                                                                                                   | arr = [1, 2, 3]; print(len(arr)) # 3                                                                                     |
| Concatenate arrays *  | arr.concat([4, 5]);                          | arr + [4, 5]                                | let arr = [1, 2, 3]; let arr2 = arr.concat([4, 5]); console.log(arr2); // [1, 2, 3, 4, 5]                                                                            | arr = [1, 2, 3]; arr2 = arr + [4, 5]; print(arr2) # [1, 2, 3, 4, 5]                                                      |
| Slice array      *   | arr.slice(1, 3);                             | arr[1:3]                                     | let arr = [1, 2, 3, 4]; let sliced = arr.slice(1, 3); console.log(sliced); // [2, 3]                                                                                 | arr = [1, 2, 3, 4]; sliced = arr[1:3]; print(sliced) # [2, 3]                                                            |
| Loop through items  | arr.forEach(item => console.log(item));       | for item in arr:                             | let arr = [1, 2, 3]; arr.forEach(item => console.log(item)); // 1 2 3                                                                                                | arr = [1, 2, 3]; for item in arr: print(item) # 1 2 3                                                                    |
| Check if item exists| arr.includes(2);                             | 2 in arr                                     | let arr = [1, 2, 3]; console.log(arr.includes(2)); // true                                                                                                           | arr = [1, 2, 3]; print(2 in arr) # True                                                                                  |
| Find index of item  | arr.indexOf(2);                              | arr.index(2)                                 | let arr = [1, 2, 3]; console.log(arr.indexOf(2)); // 1                                                                                                               | arr = [1, 2, 3]; print(arr.index(2)) # 1                                                                                 |
| Reverse array       | arr.reverse();                               | arr[::-1]                                    | let arr = [1, 2, 3]; arr.reverse(); console.log(arr); // [3, 2, 1]                                                                                                   | arr = [1, 2, 3]; print(arr[::-1]) # [3, 2, 1]                                                                            |
| Sort array          | arr.sort();                                  | sorted(arr)                                  | let arr = [3, 1, 2]; arr.sort(); console.log(arr); // [1, 2, 3]                                                                                                      | arr = [3, 1, 2]; print(sorted(arr)) # [1, 2, 3]                                                                          |
| Filter array        | arr.filter(item => item > 1);                | list(filter(lambda x: x > 1, arr))           | let arr = [1, 2, 3]; let filtered = arr.filter(item => item > 1); console.log(filtered); // [2, 3]                                                                   | arr = [1, 2, 3]; filtered = list(filter(lambda x: x > 1, arr)); print(filtered) # [2, 3]                                  |
| Map array           | arr.map(item => item * 2);                   | list(map(lambda x: x * 2, arr))              | let arr = [1, 2, 3]; let mapped = arr.map(item => item * 2); console.log(mapped); // [2, 4, 6]                                                                       | arr = [1, 2, 3]; mapped = list(map(lambda x: x * 2, arr)); print(mapped) # [2, 4, 6]                                      |
| Reduce array        | arr.reduce((acc, item) => acc + item, 0);    | reduce(lambda acc, x: acc + x, arr)          | let arr = [1, 2, 3]; let sum = arr.reduce((acc, item) => acc + item, 0); console.log(sum); // 6                                                                      | from functools import reduce; arr = [1, 2, 3]; sum = reduce(lambda acc, x: acc + x, arr); print(sum) # 6                  |
| Find first match    | arr.find(item => item > 1);                  | next(x for x in arr if x > 1)                | let arr = [1, 2, 3]; let found = arr.find(item => item > 1); console.log(found); // 2                                                                                | arr = [1, 2, 3]; found = next(x for x in arr if x > 1); print(found) # 2                                                 |
| Remove specific item| arr.splice(arr.indexOf(2), 1);               | arr.remove(2)                                | let arr = [1, 2, 3]; arr.splice(arr.indexOf(2), 1); console.log(arr); // [1, 3]                                                                                      | arr = [1, 2, 3]; arr.remove(2); print(arr) # [1, 3]                                                                      |

 Key Differences:
- In JavaScript, many array methods are part of the Array.prototype, like map(), filter(), reduce(), and so on.
- In Python, array manipulation is often handled via built-in functions like map(), filter(), len(), and list comprehensions for looping, filtering, and mapping.

Let me know if you'd like more detailed explanations or additional array methods!
</pre>
</body>
</html>